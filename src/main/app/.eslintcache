[{"/Users/bonnie/Workstation/corona-tracker/src/main/app/src/index.js":"1","/Users/bonnie/Workstation/corona-tracker/src/main/app/src/serviceWorker.js":"2","/Users/bonnie/Workstation/corona-tracker/src/main/app/src/App.js":"3","/Users/bonnie/Workstation/corona-tracker/src/main/app/src/i18n/index.js":"4","/Users/bonnie/Workstation/corona-tracker/src/main/app/src/constants.js":"5","/Users/bonnie/Workstation/corona-tracker/src/main/app/src/components/Home.js":"6","/Users/bonnie/Workstation/corona-tracker/src/main/app/src/utils/APIUtils.js":"7","/Users/bonnie/Workstation/corona-tracker/src/main/app/src/components/State.js":"8","/Users/bonnie/Workstation/corona-tracker/src/main/app/src/user/login/Login.js":"9","/Users/bonnie/Workstation/corona-tracker/src/main/app/src/user/signup/Signup.js":"10","/Users/bonnie/Workstation/corona-tracker/src/main/app/src/user/profile/Profile.js":"11","/Users/bonnie/Workstation/corona-tracker/src/main/app/src/utils/commonFunctions.js":"12","/Users/bonnie/Workstation/corona-tracker/src/main/app/src/components/Actions.js":"13","/Users/bonnie/Workstation/corona-tracker/src/main/app/src/components/LevelVaccinated.js":"14","/Users/bonnie/Workstation/corona-tracker/src/main/app/src/components/MapExplorer.js":"15","/Users/bonnie/Workstation/corona-tracker/src/main/app/src/components/Footer.js":"16","/Users/bonnie/Workstation/corona-tracker/src/main/app/src/components/Search.js":"17","/Users/bonnie/Workstation/corona-tracker/src/main/app/src/components/Level.js":"18","/Users/bonnie/Workstation/corona-tracker/src/main/app/src/components/MapSwitcher.js":"19","/Users/bonnie/Workstation/corona-tracker/src/main/app/src/components/StateHeader.js":"20","/Users/bonnie/Workstation/corona-tracker/src/main/app/src/components/Table.js":"21","/Users/bonnie/Workstation/corona-tracker/src/main/app/src/components/TimeseriesExplorer.js":"22","/Users/bonnie/Workstation/corona-tracker/src/main/app/src/components/Minigraphs.js":"23","/Users/bonnie/Workstation/corona-tracker/src/main/app/src/components/DeltaBarGraph.js":"24","/Users/bonnie/Workstation/corona-tracker/src/main/app/src/components/StateMeta.js":"25","/Users/bonnie/Workstation/corona-tracker/src/main/app/src/utils/Helpers.js":"26","/Users/bonnie/Workstation/corona-tracker/src/main/app/src/utils/Colors.js":"27","/Users/bonnie/Workstation/corona-tracker/src/main/app/src/hooks/useIsVisible.js":"28","/Users/bonnie/Workstation/corona-tracker/src/main/app/src/hooks/useStickySWR.js":"29","/Users/bonnie/Workstation/corona-tracker/src/main/app/src/common/ServerError.js":"30","/Users/bonnie/Workstation/corona-tracker/src/main/app/src/common/NotFound.js":"31","/Users/bonnie/Workstation/corona-tracker/src/main/app/src/common/LoadingIndicator.js":"32","/Users/bonnie/Workstation/corona-tracker/src/main/app/src/components/Updates.js":"33","/Users/bonnie/Workstation/corona-tracker/src/main/app/src/components/StateDropdown.js":"34","/Users/bonnie/Workstation/corona-tracker/src/main/app/src/components/MapVisualizer.js":"35","/Users/bonnie/Workstation/corona-tracker/src/main/app/src/components/Row.js":"36","/Users/bonnie/Workstation/corona-tracker/src/main/app/src/components/TimeseriesBrush.js":"37","/Users/bonnie/Workstation/corona-tracker/src/main/app/src/components/Timeseries.js":"38","/Users/bonnie/Workstation/corona-tracker/src/main/app/src/components/StateMetaCard.js":"39","/Users/bonnie/Workstation/corona-tracker/src/main/app/src/components/Tooltip.js":"40","/Users/bonnie/Workstation/corona-tracker/src/main/app/src/animations.js":"41","/Users/bonnie/Workstation/corona-tracker/src/main/app/src/hooks/useResizeObserver.js":"42","/Users/bonnie/Workstation/corona-tracker/src/main/app/src/components/HeaderCell.js":"43","/Users/bonnie/Workstation/corona-tracker/src/main/app/src/components/DistrictRow.js":"44","/Users/bonnie/Workstation/corona-tracker/src/main/app/src/components/Cell.js":"45","/Users/bonnie/Workstation/corona-tracker/src/main/app/src/components/MapLegend.js":"46","/Users/bonnie/Workstation/corona-tracker/src/main/app/src/components/ActionsPanel.js":"47","/Users/bonnie/Workstation/corona-tracker/src/main/app/src/components/loaders/MapVisualizer.js":"48","/Users/bonnie/Workstation/corona-tracker/src/main/app/src/components/loaders/Table.js":"49","/Users/bonnie/Workstation/corona-tracker/src/main/app/src/components/loaders/Timeseries.js":"50","/Users/bonnie/Workstation/corona-tracker/src/main/app/src/components/snippets/TableDeltaHelper.js":"51","/Users/bonnie/Workstation/corona-tracker/src/main/app/src/components/Timeline.js":"52","/Users/bonnie/Workstation/corona-tracker/src/main/app/src/workers/getDistricts.js":"53","/Users/bonnie/Workstation/corona-tracker/src/main/app/src/components/Blog.js":"54","/Users/bonnie/Workstation/corona-tracker/src/main/app/src/components/Navbar.js":"55","/Users/bonnie/Workstation/corona-tracker/src/main/app/src/components/About.js":"56","/Users/bonnie/Workstation/corona-tracker/src/main/app/src/components/LanguageSwitcher.js":"57"},{"size":1071,"mtime":1613299884174,"results":"58","hashOfConfig":"59"},{"size":5165,"mtime":1613299884176,"results":"60","hashOfConfig":"59"},{"size":3201,"mtime":1613389909836,"results":"61","hashOfConfig":"59"},{"size":774,"mtime":1613299884173,"results":"62","hashOfConfig":"59"},{"size":9026,"mtime":1613299884170,"results":"63","hashOfConfig":"59"},{"size":5233,"mtime":1613390830523,"results":"64","hashOfConfig":"59"},{"size":2318,"mtime":1613390816823,"results":"65","hashOfConfig":"59"},{"size":9995,"mtime":1613390856194,"results":"66","hashOfConfig":"59"},{"size":3417,"mtime":1613299884180,"results":"67","hashOfConfig":"59"},{"size":12548,"mtime":1613299884182,"results":"68","hashOfConfig":"59"},{"size":3309,"mtime":1613299884181,"results":"69","hashOfConfig":"59"},{"size":5521,"mtime":1613299884183,"results":"70","hashOfConfig":"59"},{"size":1502,"mtime":1613384712554,"results":"71","hashOfConfig":"59"},{"size":1076,"mtime":1613299884155,"results":"72","hashOfConfig":"59"},{"size":11013,"mtime":1613299884155,"results":"73","hashOfConfig":"59"},{"size":1590,"mtime":1613299884150,"results":"74","hashOfConfig":"59"},{"size":10114,"mtime":1613299884161,"results":"75","hashOfConfig":"59"},{"size":2304,"mtime":1613299884155,"results":"76","hashOfConfig":"59"},{"size":2037,"mtime":1613299884157,"results":"77","hashOfConfig":"59"},{"size":1852,"mtime":1613299884162,"results":"78","hashOfConfig":"59"},{"size":12153,"mtime":1613299884164,"results":"79","hashOfConfig":"59"},{"size":10874,"mtime":1613299884167,"results":"80","hashOfConfig":"59"},{"size":5653,"mtime":1613299884158,"results":"81","hashOfConfig":"59"},{"size":5652,"mtime":1613299884149,"results":"82","hashOfConfig":"59"},{"size":6119,"mtime":1613299884163,"results":"83","hashOfConfig":"59"},{"size":809,"mtime":1613299884183,"results":"84","hashOfConfig":"59"},{"size":558,"mtime":1613299884183,"results":"85","hashOfConfig":"59"},{"size":671,"mtime":1613299884172,"results":"86","hashOfConfig":"59"},{"size":617,"mtime":1613299884173,"results":"87","hashOfConfig":"59"},{"size":711,"mtime":1613299884145,"results":"88","hashOfConfig":"59"},{"size":638,"mtime":1613299884144,"results":"89","hashOfConfig":"59"},{"size":322,"mtime":1613299884143,"results":"90","hashOfConfig":"59"},{"size":2335,"mtime":1613299884168,"results":"91","hashOfConfig":"59"},{"size":2416,"mtime":1613299884162,"results":"92","hashOfConfig":"59"},{"size":16552,"mtime":1613299884157,"results":"93","hashOfConfig":"59"},{"size":9366,"mtime":1613299884161,"results":"94","hashOfConfig":"59"},{"size":6848,"mtime":1613299884166,"results":"95","hashOfConfig":"59"},{"size":19535,"mtime":1613299884165,"results":"96","hashOfConfig":"59"},{"size":598,"mtime":1613299884163,"results":"97","hashOfConfig":"59"},{"size":1315,"mtime":1613299884167,"results":"98","hashOfConfig":"59"},{"size":1262,"mtime":1613299884142,"results":"99","hashOfConfig":"59"},{"size":618,"mtime":1613299884172,"results":"100","hashOfConfig":"59"},{"size":1723,"mtime":1613299884151,"results":"101","hashOfConfig":"59"},{"size":2626,"mtime":1613299884150,"results":"102","hashOfConfig":"59"},{"size":1752,"mtime":1613299884149,"results":"103","hashOfConfig":"59"},{"size":10041,"mtime":1613299884156,"results":"104","hashOfConfig":"59"},{"size":3528,"mtime":1613299884148,"results":"105","hashOfConfig":"59"},{"size":1048,"mtime":1613299884168,"results":"106","hashOfConfig":"59"},{"size":683,"mtime":1613299884168,"results":"107","hashOfConfig":"59"},{"size":573,"mtime":1613299884169,"results":"108","hashOfConfig":"59"},{"size":808,"mtime":1613299884169,"results":"109","hashOfConfig":"59"},{"size":5477,"mtime":1613299884164,"results":"110","hashOfConfig":"59"},{"size":626,"mtime":1613299884184,"results":"111","hashOfConfig":"59"},{"size":106,"mtime":1613299884149,"results":"112","hashOfConfig":"113"},{"size":4765,"mtime":1613299884159,"results":"114","hashOfConfig":"113"},{"size":1439,"mtime":1613299884147,"results":"115","hashOfConfig":"113"},{"size":2082,"mtime":1613299884154,"results":"116","hashOfConfig":"113"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"119"},"1ngum3w",{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"119"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"124","usedDeprecatedRules":"119"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"119"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"119"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"131","messages":"132","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"133","usedDeprecatedRules":"119"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"136","usedDeprecatedRules":"119"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"119"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"119"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"143","usedDeprecatedRules":"119"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"119"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"148","usedDeprecatedRules":"119"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"119"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"153","usedDeprecatedRules":"119"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"119"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"119"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"119"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"119"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"119"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"119"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"119"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"119"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"119"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"119"},{"filePath":"174","messages":"175","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"119"},{"filePath":"176","messages":"177","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"119"},{"filePath":"178","messages":"179","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"119"},{"filePath":"180","messages":"181","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"119"},{"filePath":"182","messages":"183","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"119"},{"filePath":"184","messages":"185","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"119"},{"filePath":"186","messages":"187","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"119"},{"filePath":"188","messages":"189","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"119"},{"filePath":"190","messages":"191","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"119"},{"filePath":"192","messages":"193","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"119"},{"filePath":"194","messages":"195","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"119"},{"filePath":"196","messages":"197","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"119"},{"filePath":"198","messages":"199","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"119"},{"filePath":"200","messages":"201","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"119"},{"filePath":"202","messages":"203","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"119"},{"filePath":"204","messages":"205","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"119"},{"filePath":"206","messages":"207","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"119"},{"filePath":"208","messages":"209","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"119"},{"filePath":"210","messages":"211","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"119"},{"filePath":"212","messages":"213","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"119"},{"filePath":"214","messages":"215","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"119"},{"filePath":"216","messages":"217","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"218","messages":"219","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"220","messages":"221","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"222","messages":"223","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"224","messages":"225","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"226","messages":"227","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"228","messages":"229","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"119"},{"filePath":"230","messages":"231","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1188niz",{"filePath":"232","messages":"233","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"234","messages":"235","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"236","messages":"237","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/bonnie/Workstation/corona-tracker/src/main/app/src/index.js",[],["238","239"],"/Users/bonnie/Workstation/corona-tracker/src/main/app/src/serviceWorker.js",[],"/Users/bonnie/Workstation/corona-tracker/src/main/app/src/App.js",["240","241","242","243","244","245"],"import './App.scss';\nimport React, { Component } from 'react';\nimport {lazy, useState, Suspense, useEffect} from 'react';\nimport {Route, Redirect, Switch, useLocation} from 'react-router-dom';\nimport useDarkMode from 'use-dark-mode';\n\nimport Login from './user/login/Login';\nimport Signup from './user/signup/Signup';\nimport Profile from './user/profile/Profile';\nimport { Layout, notification } from 'antd';\nimport { getCurrentUser } from './utils/APIUtils';\nimport { ACCESS_TOKEN } from './constants';\n\nconst Home = lazy(() => import('./components/Home'));\nconst State = lazy(() => import('./components/State'));\nconst { Content } = Layout;\n\nclass App extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      currentUser: null,\n      isAuthenticated: false,\n      isLoading: false\n    }\n    this.handleLogout = this.handleLogout.bind(this);\n    this.loadCurrentUser = this.loadCurrentUser.bind(this);\n    this.handleLogin = this.handleLogin.bind(this);\n\n    notification.config({\n      placement: 'topRight',\n      top: 70,\n      duration: 3,\n    });\n  }\n\n  loadCurrentUser() {\n    this.setState({\n      isLoading: true\n    });\n    getCurrentUser()\n    .then(response => {\n      this.setState({\n        currentUser: response,\n        isAuthenticated: true,\n        isLoading: false\n      });\n    }).catch(error => {\n      this.setState({\n        isLoading: false\n      });  \n    });\n  }\n\n  componentDidMount() {\n    this.loadCurrentUser();\n  }\n\n  handleLogout(redirectTo=\"/\", notificationType=\"success\", description=\"You're successfully logged out.\") {\n    localStorage.removeItem(ACCESS_TOKEN);\n\n    this.setState({\n      currentUser: null,\n      isAuthenticated: false\n    });\n\n    this.props.history.push(redirectTo);\n    \n    notification[notificationType]({\n      message: 'Polling App',\n      description: description,\n    });\n  }\n\n  handleLogin() {\n    notification.success({\n      message: 'Polling App',\n      description: \"You're successfully logged in.\",\n    });\n    this.loadCurrentUser();\n    this.props.history.push(\"/\");\n  }\n\n\n  \n  render (){\n    const pages = [\n      {\n        pageLink: '/',\n        view: Home,\n        displayName: 'Home',\n        showInNavbar: true,\n      },\n      {\n        pageLink: '/state/:stateCode',\n        view: State,\n        displayName: 'State',\n        showInNavbar: false,\n      },\n    ];\n\n    return (\n      <div className=\"App\">\n\n        <Suspense fallback={<div />}>\n          <Switch>\n            {pages.map((page, index) => {\n              return (\n                <Route\n                  exact\n                  path={page.pageLink}\n                  render={({match}) => <page.view />}\n                  key={index}\n                />\n              );\n            })}\n              <Route path=\"/login\" render={(props) => <Login onLogin={this.handleLogin} {...props} />}></Route>\n              <Route path=\"/signup\" component={Signup}></Route>\n              <Route path=\"/users/:username\" render={(props) => <Profile isAuthenticated={this.state.isAuthenticated} currentUser={this.state.currentUser} {...props}  />}></Route>\n          </Switch>\n        </Suspense>\n      </div>\n    );\n  }\n};\n\nexport default App;\n","/Users/bonnie/Workstation/corona-tracker/src/main/app/src/i18n/index.js",[],"/Users/bonnie/Workstation/corona-tracker/src/main/app/src/constants.js",[],"/Users/bonnie/Workstation/corona-tracker/src/main/app/src/components/Home.js",["246","247"],"/Users/bonnie/Workstation/corona-tracker/src/main/app/src/utils/APIUtils.js",["248"],"import { API_ROOT_URL, POLL_LIST_SIZE, ACCESS_TOKEN } from '../constants';\n\nconst request = (options) => {\n    const headers = new Headers({\n        'Content-Type': 'application/json',\n    })\n    \n    if(localStorage.getItem(ACCESS_TOKEN)) {\n        headers.append('Authorization', 'Bearer ' + localStorage.getItem(ACCESS_TOKEN))\n    }\n\n    const defaults = {headers: headers};\n    options = Object.assign({}, defaults, options);\n\n    return fetch(options.url, options)\n    .then(response => \n        response.json().then(json => {\n            if(!response.ok) {\n                return Promise.reject(json);\n            }\n            return json;\n        })\n    );\n};\n\nexport function updatelog(){ \n    return request({\n        url: API_ROOT_URL + \"/updatelog\",\n        method: 'GET',\n    });\n}\n\nexport function timeseries(){ \n    return request({\n        url: API_ROOT_URL + \"/timeseries\",\n        method: 'GET',\n    });\n}\n\n\nexport function timeseriesState(stateCode){ \n    return request({\n      url: API_ROOT_URL + \"/timeseries/\" + stateCode,\n        method: 'GET',\n    });\n}\n\nexport function _data(){ \n    return request({\n        url: API_ROOT_URL + \"/data\",\n        method: 'GET',\n    });\n}\n\nexport function login(loginRequest) {\n    return request({\n        url: API_ROOT_URL + \"/auth/signin\",\n        method: 'POST',\n        body: JSON.stringify(loginRequest)\n    });\n}\n\nexport function signup(signupRequest) {\n    return request({\n        url: API_ROOT_URL + \"/auth/signup\",\n        method: 'POST',\n        body: JSON.stringify(signupRequest)\n    });\n}\n\nexport function checkUsernameAvailability(username) {\n    return request({\n        url: API_ROOT_URL + \"/user/checkUsernameAvailability?username=\" + username,\n        method: 'GET'\n    });\n}\n\nexport function checkEmailAvailability(email) {\n    return request({\n        url: API_ROOT_URL + \"/user/checkEmailAvailability?email=\" + email,\n        method: 'GET'\n    });\n}\n\n\nexport function getCurrentUser() {\n    if(!localStorage.getItem(ACCESS_TOKEN)) {\n        return Promise.reject(\"No access token set.\");\n    }\n\n    return request({\n        url: API_ROOT_URL + \"/user/me\",\n        method: 'GET'\n    });\n}\n\nexport function getUserProfile(username) {\n    return request({\n        url: API_ROOT_URL + \"/users/\" + username,\n        method: 'GET'\n    });\n}\n\n","/Users/bonnie/Workstation/corona-tracker/src/main/app/src/components/State.js",["249","250","251","252"],"import {STATE_NAMES} from '../constants';\nimport {timeseriesState, data} from '../utils/APIUtils';\nimport useIsVisible from '../hooks/useIsVisible';\nimport {fetcher, formatNumber, getStatistic} from '../utils/commonFunctions';\n\nimport classnames from 'classnames';\nimport {\n  memo,\n  useMemo,\n  useState,\n  useEffect,\n  lazy,\n  Suspense,\n  useRef,\n} from 'react';\nimport {Smile} from 'react-feather';\nimport {Helmet} from 'react-helmet';\nimport {useTranslation} from 'react-i18next';\nimport {useParams} from 'react-router-dom';\nimport {useSessionStorage} from 'react-use';\nimport useSWR from 'swr';\n\nconst DeltaBarGraph = lazy(() => import('./DeltaBarGraph'));\nconst Footer = lazy(() => import('./Footer'));\nconst Level = lazy(() => import('./Level'));\nconst LevelVaccinated = lazy(() => import('./LevelVaccinated'));\nconst MapExplorer = lazy(() => import('./MapExplorer'));\nconst MapSwitcher = lazy(() => import('./MapSwitcher'));\nconst Minigraphs = lazy(() => import('./Minigraphs'));\nconst StateHeader = lazy(() => import('./StateHeader'));\nconst StateMeta = lazy(() => import('./StateMeta'));\nconst TimeseriesExplorer = lazy(() => import('./TimeseriesExplorer'));\n\nfunction State() {\n  const {t} = useTranslation();\n\n  const stateCode = useParams().stateCode.toUpperCase();\n\n  const [mapStatistic, setMapStatistic] = useSessionStorage(\n    'mapStatistic',\n    'active'\n  );\n  const [showAllDistricts, setShowAllDistricts] = useState(false);\n  const [regionHighlighted, setRegionHighlighted] = useState({\n    stateCode: stateCode,\n    districtName: null,\n  });\n\n  useEffect(() => {\n    if (regionHighlighted.stateCode !== stateCode) {\n      setRegionHighlighted({\n        stateCode: stateCode,\n        districtName: null,\n      });\n      setShowAllDistricts(false);\n    }\n  }, [regionHighlighted.stateCode, stateCode]);\n\n  const {data: timeseries, error: timeseriesResponseError} = timeseriesState(stateCode); \n  const {data} = data();\n\n  const toggleShowAllDistricts = () => {\n    setShowAllDistricts(!showAllDistricts);\n  };\n\n  const handleSort = (districtNameA, districtNameB) => {\n    const districtA = data[stateCode].districts[districtNameA];\n    const districtB = data[stateCode].districts[districtNameB];\n    return (\n      getStatistic(districtB, 'total', mapStatistic) -\n      getStatistic(districtA, 'total', mapStatistic)\n    );\n  };\n\n  const gridRowCount = useMemo(() => {\n    if (!data) return;\n    const gridColumnCount = window.innerWidth >= 540 ? 3 : 2;\n    const districtCount = data[stateCode]?.districts\n      ? Object.keys(data[stateCode].districts).filter(\n          (districtName) => districtName !== 'Unknown'\n        ).length\n      : 0;\n    const gridRowCount = Math.ceil(districtCount / gridColumnCount);\n    return gridRowCount;\n  }, [data, stateCode]);\n\n  const stateMetaElement = useRef();\n  const isStateMetaVisible = useIsVisible(stateMetaElement, {once: true});\n\n  const trail = useMemo(() => {\n    const styles = [];\n\n    [0, 0, 0, 0].map((element, index) => {\n      styles.push({\n        animationDelay: `${index * 250}ms`,\n      });\n      return null;\n    });\n    return styles;\n  }, []);\n\n  const lookback = showAllDistricts ? (window.innerWidth >= 540 ? 10 : 8) : 6;\n\n  return (\n    <>\n      <Helmet>\n        <title>\n          Coronavirus Outbreak in {STATE_NAMES[stateCode]} - covid19india.org\n        </title>\n        <meta\n          name=\"title\"\n          content={`Coronavirus Outbreak in ${STATE_NAMES[stateCode]}: Latest Map and Case Count`}\n        />\n      </Helmet>\n\n      <div className=\"State\">\n        <div className=\"state-left\">\n          <StateHeader data={data?.[stateCode]} stateCode={stateCode} />\n\n          <div style={{position: 'relative'}}>\n            <MapSwitcher {...{mapStatistic, setMapStatistic}} />\n            <Level data={data?.[stateCode]} />\n            <Minigraphs\n              timeseries={timeseries?.[stateCode]?.dates}\n              {...{stateCode}}\n              forceRender={!!timeseriesResponseError}\n            />\n          </div>\n\n          {data?.[stateCode]?.total?.vaccinated && (\n            <LevelVaccinated data={data?.[stateCode]} />\n          )}\n\n          {data && (\n            <Suspense fallback={<div style={{minHeight: '50rem'}} />}>\n              <MapExplorer\n                {...{\n                  stateCode,\n                  data,\n                  regionHighlighted,\n                  setRegionHighlighted,\n                  mapStatistic,\n                  setMapStatistic,\n                }}\n              ></MapExplorer>\n            </Suspense>\n          )}\n\n          <span ref={stateMetaElement} />\n\n          {data && isStateMetaVisible && (\n            <StateMeta\n              {...{\n                stateCode,\n                data,\n              }}\n              timeseries={timeseries?.[stateCode]?.dates}\n            />\n          )}\n        </div>\n\n        <div className=\"state-right\">\n          <>\n            <div\n              className=\"district-bar\"\n              style={!showAllDistricts ? {display: 'flex'} : {}}\n            >\n              <div className=\"district-bar-top\">\n                <div className=\"district-bar-left\">\n                  <h2\n                    className={classnames(mapStatistic, 'fadeInUp')}\n                    style={trail[0]}\n                  >\n                    Top districts\n                  </h2>\n                  <div\n                    className={`districts fadeInUp ${\n                      showAllDistricts ? 'is-grid' : ''\n                    }`}\n                    style={\n                      showAllDistricts\n                        ? {\n                            gridTemplateRows: `repeat(${gridRowCount}, 2rem)`,\n                            ...trail[1],\n                          }\n                        : trail[1]\n                    }\n                  >\n                    {Object.keys(data?.[stateCode]?.districts || {})\n                      .filter((districtName) => districtName !== 'Unknown')\n                      .sort((a, b) => handleSort(a, b))\n                      .slice(0, showAllDistricts ? undefined : 5)\n                      .map((districtName) => {\n                        const total = getStatistic(\n                          data[stateCode].districts[districtName],\n                          'total',\n                          mapStatistic\n                        );\n                        const delta = getStatistic(\n                          data[stateCode].districts[districtName],\n                          'delta',\n                          mapStatistic\n                        );\n                        return (\n                          <div key={districtName} className=\"district\">\n                            <h2>{formatNumber(total)}</h2>\n                            <h5>{t(districtName)}</h5>\n                            {mapStatistic !== 'active' && (\n                              <div className=\"delta\">\n                                <h6 className={mapStatistic}>\n                                  {delta > 0\n                                    ? '\\u2191' + formatNumber(delta)\n                                    : ''}\n                                </h6>\n                              </div>\n                            )}\n                          </div>\n                        );\n                      })}\n                  </div>\n                </div>\n\n                <div className=\"district-bar-right fadeInUp\" style={trail[2]}>\n                  {timeseries &&\n                    (mapStatistic === 'confirmed' ||\n                      mapStatistic === 'deceased') && (\n                      <div className=\"happy-sign\">\n                        {Object.keys(timeseries[stateCode]?.dates || {})\n                          .slice(-lookback)\n                          .every(\n                            (date) =>\n                              getStatistic(\n                                timeseries[stateCode].dates[date],\n                                'delta',\n                                mapStatistic\n                              ) === 0\n                          ) && (\n                          <div\n                            className={`alert ${\n                              mapStatistic === 'confirmed' ? 'is-green' : ''\n                            }`}\n                          >\n                            <Smile />\n                            <div className=\"alert-right\">\n                              No new {mapStatistic} cases in the past five days\n                            </div>\n                          </div>\n                        )}\n                      </div>\n                    )}\n                  <DeltaBarGraph\n                    timeseries={timeseries?.[stateCode]?.dates}\n                    statistic={mapStatistic}\n                    {...{stateCode, lookback}}\n                    forceRender={!!timeseriesResponseError}\n                  />\n                </div>\n              </div>\n\n              <div className=\"district-bar-bottom\">\n                {Object.keys(data?.[stateCode]?.districts || {}).length > 5 ? (\n                  <button\n                    className=\"button fadeInUp\"\n                    onClick={toggleShowAllDistricts}\n                    style={trail[3]}\n                  >\n                    <span>{showAllDistricts ? `View less` : `View all`}</span>\n                  </button>\n                ) : (\n                  <div style={{height: '3.75rem', flexBasis: '15%'}} />\n                )}\n              </div>\n            </div>\n\n            <Suspense fallback={<div />}>\n              <TimeseriesExplorer\n                {...{\n                  stateCode,\n                  timeseries,\n                  regionHighlighted,\n                  setRegionHighlighted,\n                }}\n                forceRender={!!timeseriesResponseError}\n              />\n            </Suspense>\n          </>\n        </div>\n      </div>\n\n      <Footer />\n    </>\n  );\n}\n\nexport default memo(State);\n","/Users/bonnie/Workstation/corona-tracker/src/main/app/src/user/login/Login.js",[],"/Users/bonnie/Workstation/corona-tracker/src/main/app/src/user/signup/Signup.js",[],"/Users/bonnie/Workstation/corona-tracker/src/main/app/src/user/profile/Profile.js",["253","254"],"import React, { Component } from 'react';\nimport { getUserProfile } from '../../utils/APIUtils';\nimport { Avatar, Tabs } from 'antd';\nimport { getAvatarColor } from '../../utils/Colors';\nimport { formatDate } from '../../utils/Helpers';\nimport LoadingIndicator  from '../../common/LoadingIndicator';\nimport './Profile.css';\nimport NotFound from '../../common/NotFound';\nimport ServerError from '../../common/ServerError';\n\nconst TabPane = Tabs.TabPane;\n\nclass Profile extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            user: null,\n            isLoading: false\n        }\n        this.loadUserProfile = this.loadUserProfile.bind(this);\n    }\n\n    loadUserProfile(username) {\n        this.setState({\n            isLoading: true\n        });\n\n        getUserProfile(username)\n        .then(response => {\n            this.setState({\n                user: response,\n                isLoading: false\n            });\n        }).catch(error => {\n            if(error.status === 404) {\n                this.setState({\n                    notFound: true,\n                    isLoading: false\n                });\n            } else {\n                this.setState({\n                    serverError: true,\n                    isLoading: false\n                });        \n            }\n        });        \n    }\n      \n    componentDidMount() {\n        const username = this.props.match.params.username;\n        this.loadUserProfile(username);\n    }\n\n    componentDidUpdate(nextProps) {\n        if(this.props.match.params.username !== nextProps.match.params.username) {\n            this.loadUserProfile(nextProps.match.params.username);\n        }        \n    }\n\n    render() {\n        if(this.state.isLoading) {\n            return <LoadingIndicator />;\n        }\n\n        if(this.state.notFound) {\n            return <NotFound />;\n        }\n\n        if(this.state.serverError) {\n            return <ServerError />;\n        }\n\n        const tabBarStyle = {\n            textAlign: 'center'\n        };\n\n        return (\n            <div className=\"profile\">\n                { \n                    this.state.user ? (\n                        <div className=\"user-profile\">\n                            <div className=\"user-details\">\n                                <div className=\"user-avatar\">\n                                    <Avatar className=\"user-avatar-circle\" style={{ backgroundColor: getAvatarColor(this.state.user.name)}}>\n                                        {this.state.user.name[0].toUpperCase()}\n                                    </Avatar>\n                                </div>\n                                <div className=\"user-summary\">\n                                    <div className=\"full-name\">{this.state.user.name}</div>\n                                    <div className=\"username\">@{this.state.user.username}</div>\n                                    <div className=\"user-joined\">\n                                        Joined {formatDate(this.state.user.joinedAt)}\n                                    </div>\n                                </div>\n                            </div>\n                        </div>  \n                    ): null               \n                }\n            </div>\n        );\n    }\n}\n\nexport default Profile;\n","/Users/bonnie/Workstation/corona-tracker/src/main/app/src/utils/commonFunctions.js",[],"/Users/bonnie/Workstation/corona-tracker/src/main/app/src/components/Actions.js",["255"],"import ActionsPanel from './ActionsPanel';\nimport {fetcher} from '../utils/commonFunctions';\nimport {memo, useState, useEffect, lazy, Suspense} from 'react';\nimport {useLocalStorage} from 'react-use';\nimport {updatelog} from '../utils/APIUtils';\n\nconst Updates = lazy(() => import('./Updates'));\n\nconst Actions = ({setDate, dates}) => {\n  const [showUpdates, setShowUpdates] = useState(false);\n  const [newUpdate, setNewUpdate] = useLocalStorage('newUpdate', false);\n  const [lastViewedLog, setLastViewedLog] = useLocalStorage('lastViewedLog', 0);\n  const [isTimelineMode, setIsTimelineMode] = useState(false);\n  const {data: updates} = updatelog();\n\n  useEffect(() => {\n    if (updates !== undefined) {\n      const lastTimestamp = updates.slice().reverse()[0].timestamp * 1000;\n      if (lastTimestamp !== lastViewedLog) {\n        setNewUpdate(true);\n        setLastViewedLog(lastTimestamp);\n      }\n    }\n  }, [lastViewedLog, updates, setLastViewedLog, setNewUpdate]);\n\n  return (\n    <>\n      <ActionsPanel\n        {...{\n          lastViewedLog,\n          newUpdate,\n          isTimelineMode,\n          setIsTimelineMode,\n          showUpdates,\n          setDate,\n          dates,\n          setNewUpdate,\n          setShowUpdates,\n        }}\n      />\n\n      {showUpdates && (\n        <Suspense fallback={<div />}>\n          <Updates {...{updates}} />\n        </Suspense>\n      )}\n    </>\n  );\n};\n\nconst isEqual = (prevProps, currProps) => {\n  return true;\n};\n\nexport default memo(Actions, isEqual);\n","/Users/bonnie/Workstation/corona-tracker/src/main/app/src/components/LevelVaccinated.js",[],"/Users/bonnie/Workstation/corona-tracker/src/main/app/src/components/MapExplorer.js",["256"],"import MapVisualizerLoader from './loaders/MapVisualizer';\n\nimport {\n  MAP_META,\n  MAP_TYPES,\n  MAP_VIEWS,\n  MAP_VIZS,\n  PRIMARY_STATISTICS,\n  SPRING_CONFIG_NUMBERS,\n  STATE_NAMES,\n  STATISTIC_CONFIGS,\n  UNKNOWN_DISTRICT_KEY,\n} from '../constants';\nimport {formatNumber, getStatistic, capitalize} from '../utils/commonFunctions';\n\nimport {\n  DotFillIcon,\n  ArrowLeftIcon,\n  OrganizationIcon,\n} from '@primer/octicons-v2-react';\nimport classnames from 'classnames';\nimport equal from 'fast-deep-equal';\nimport produce from 'immer';\nimport {\n  memo,\n  useCallback,\n  useEffect,\n  useMemo,\n  useRef,\n  useState,\n  Suspense,\n  lazy,\n} from 'react';\nimport {useTranslation} from 'react-i18next';\nimport {useHistory} from 'react-router-dom';\nimport {animated, useSpring} from 'react-spring';\nimport {useSwipeable} from 'react-swipeable';\nimport {useWindowSize} from 'react-use';\n\nconst MapVisualizer = lazy(() => import('./MapVisualizer'));\n\nfunction MapExplorer({\n  stateCode: mapCode = 'TT',\n  data,\n  mapStatistic,\n  setMapStatistic,\n  regionHighlighted,\n  setRegionHighlighted,\n  anchor,\n  setAnchor,\n  expandTable,\n}) {\n  const {t} = useTranslation();\n  const mapExplorerRef = useRef();\n  const {width} = useWindowSize();\n\n  const [mapView, setMapView] = useState(MAP_VIEWS.DISTRICTS);\n  const [mapViz, setMapViz] = useState(\n    MAP_META[mapCode].mapType === MAP_TYPES.COUNTRY\n      ? MAP_VIZS.BUBBLES\n      : MAP_VIZS.CHOROPLETH\n  );\n\n  const mapMeta = MAP_META[mapCode];\n  const mapData =\n    mapMeta.mapType === MAP_TYPES.COUNTRY ? data : {[mapCode]: data[mapCode]};\n\n  const hoveredRegion = useMemo(() => {\n    const hoveredData =\n      (regionHighlighted.districtName\n        ? data[regionHighlighted.stateCode]?.districts?.[\n            regionHighlighted.districtName\n          ]\n        : data[regionHighlighted.stateCode]) || {};\n\n    return produce(hoveredData, (draft) => {\n      draft.name =\n        regionHighlighted.districtName ||\n        STATE_NAMES[regionHighlighted.stateCode];\n    });\n  }, [data, regionHighlighted.stateCode, regionHighlighted.districtName]);\n\n  const handleTabClick = useCallback(\n    (option) => {\n      switch (option) {\n        case MAP_VIZS.CHOROPLETH:\n          setMapViz(MAP_VIZS.CHOROPLETH);\n          break;\n        case MAP_VIZS.BUBBLES:\n          setMapViz(MAP_VIZS.BUBBLES);\n          break;\n      }\n    },\n    [setMapViz]\n  );\n\n  const handleDistrictClick = useCallback(() => {\n    const newMapView =\n      mapView === MAP_VIEWS.DISTRICTS ? MAP_VIEWS.STATES : MAP_VIEWS.DISTRICTS;\n    if (newMapView === MAP_VIEWS.STATES) {\n      setRegionHighlighted({\n        stateCode: regionHighlighted.stateCode,\n        districtName: null,\n      });\n    }\n    setMapView(newMapView);\n  }, [mapView, setRegionHighlighted, regionHighlighted.stateCode]);\n\n  const ChoroplethIcon = useMemo(\n    () => (\n      <svg\n        width=\"314\"\n        height=\"314\"\n        viewBox=\"0 0 314 314\"\n        fill=\"none\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n      >\n        <path\n          d=\"M78.2861 145.778C80.6671 155.387 84.6108 164.28 92.421 170.488C94.5409 174.766 93.7381 180.115 96.2412 184.535C99.7619 190.751 102.898 195.156 110.758 195.156C119.259 195.156 127.582 192.241 132.576 184.963C136.539 179.187 143.562 174.194 150.658 178.968C156.039 182.587 157.864 191.253 161.949 196.312C168.044 203.859 175.962 212.131 184.107 217.339C190.795 221.615 199.602 221.297 207.368 220.551C214.111 219.903 220.088 212.137 223.71 207.189C227.102 202.555 230.602 198.075 233.006 192.843C238.463 180.961 236.721 162.008 225.62 153.958C213.23 144.974 196.881 145.725 183.343 139.654C175.796 136.27 175.843 122.587 174.174 115.758C172.492 108.876 170.655 99.867 164.581 95.3733C155.36 88.5509 146.436 93.7458 137.075 96.444C133.325 97.525 131.816 100.817 129.095 103.424L129.093 103.426C126.105 106.29 121.531 110.674 117.974 112.632C113.709 114.979 111.262 119.456 105.834 119.612C104.487 119.651 98.6801 120.375 97.7693 119.227C94.2704 114.814 92.1979 113.445 86.6906 113.445C83.0636 113.445 77.14 118.241 77.14 122.31C77.14 130.086 76.4094 138.205 78.2861 145.778Z\"\n          strokeWidth=\"10\"\n          strokeLinecap=\"round\"\n          strokeLinejoin=\"round\"\n        />\n      </svg>\n    ),\n    []\n  );\n\n  const BubblesIcon = useMemo(\n    () => (\n      <svg\n        width=\"22\"\n        height=\"27\"\n        viewBox=\"-1 -5 22 27\"\n        fill=\"none\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n      >\n        <circle cx=\"5.5\" cy=\"5.5\" r=\"5.5\" fillOpacity=\"0.4\" />\n        <circle cx=\"5.5\" cy=\"5.5\" r=\"5\" strokeOpacity=\"0.5\" />\n        <circle cx=\"6.5\" cy=\"11.5\" r=\"3.5\" fillOpacity=\"0.4\" />\n        <circle cx=\"6.5\" cy=\"11.5\" r=\"3\" strokeOpacity=\"0.5\" />\n        <circle cx=\"13.5\" cy=\"9.5\" r=\"6.5\" fillOpacity=\"0.4\" />\n        <circle cx=\"13.5\" cy=\"9.5\" r=\"6\" strokeOpacity=\"0.5\" />\n      </svg>\n    ),\n    []\n  );\n\n  const history = useHistory();\n  const panelRef = useRef();\n\n  useEffect(() => {\n    if (history.location.hash === '#MapExplorer') {\n      panelRef.current.scrollIntoView();\n    }\n  }, [history]);\n\n  const trail = useMemo(() => {\n    const styles = [];\n\n    [0, 0, 0, 0, 0, 0, 0].map((element, index) => {\n      styles.push({\n        animationDelay: `${index * 250}ms`,\n      });\n      return null;\n    });\n\n    return styles;\n  }, []);\n\n  const spring = useSpring({\n    total: getStatistic(hoveredRegion, 'total', mapStatistic),\n    config: {tension: 250, ...SPRING_CONFIG_NUMBERS},\n  });\n\n  const swipeHandlers = useSwipeable({\n    onSwipedRight: () => {\n      const currentIndex = PRIMARY_STATISTICS.indexOf(mapStatistic);\n      const toIndex =\n        currentIndex > 0 ? currentIndex - 1 : PRIMARY_STATISTICS.length - 1;\n      setMapStatistic(PRIMARY_STATISTICS[toIndex]);\n    },\n    onSwipedLeft: () => {\n      const currentIndex = PRIMARY_STATISTICS.indexOf(mapStatistic);\n      const toIndex =\n        currentIndex < PRIMARY_STATISTICS.length - 1 ? currentIndex + 1 : 0;\n      setMapStatistic(PRIMARY_STATISTICS[toIndex]);\n    },\n  });\n\n  const statisticConfig = STATISTIC_CONFIGS[mapStatistic];\n\n  return (\n    <div\n      className={classnames(\n        'MapExplorer',\n        {stickied: anchor === 'mapexplorer'},\n        {\n          hidden:\n            anchor && (!expandTable || width < 769) && anchor !== 'mapexplorer',\n        }\n      )}\n    >\n      <div className=\"panel\" ref={panelRef}>\n        <div className=\"panel-left fadeInUp\" style={trail[0]}>\n          <h2 className={classnames(mapStatistic)}>\n            {t(hoveredRegion.name)}\n            {hoveredRegion.name === UNKNOWN_DISTRICT_KEY &&\n              ` [${t(STATE_NAMES[regionHighlighted.stateCode])}]`}\n          </h2>\n\n          {regionHighlighted.stateCode && (\n            <h1 className={classnames('district', mapStatistic)}>\n              <animated.div>\n                {spring.total.interpolate((total) =>\n                  formatNumber(\n                    total,\n                    statisticConfig.format !== 'short'\n                      ? statisticConfig.format\n                      : 'int',\n                    mapStatistic\n                  )\n                )}\n              </animated.div>\n              <span>{t(capitalize(statisticConfig.displayName))}</span>\n            </h1>\n          )}\n        </div>\n\n        <div className={classnames('panel-right', `is-${mapStatistic}`)}>\n          <div className=\"switch-type\">\n            <div\n              className={classnames('choropleth fadeInUp', {\n                'is-highlighted': mapViz === MAP_VIZS.CHOROPLETH,\n              })}\n              onClick={handleTabClick.bind(this, MAP_VIZS.CHOROPLETH)}\n              style={trail[1]}\n            >\n              {ChoroplethIcon}\n            </div>\n            <div\n              className={classnames('bubble fadeInUp', {\n                'is-highlighted': mapViz === MAP_VIZS.BUBBLES,\n              })}\n              onClick={handleTabClick.bind(this, MAP_VIZS.BUBBLES)}\n              style={trail[2]}\n            >\n              {BubblesIcon}\n            </div>\n\n            {mapMeta.mapType === MAP_TYPES.COUNTRY && (\n              <>\n                <div className=\"divider\" />\n                <div\n                  className={classnames('boundary fadeInUp', {\n                    'is-highlighted': mapView === MAP_VIEWS.DISTRICTS,\n                  })}\n                  onClick={handleDistrictClick.bind(this)}\n                  style={trail[3]}\n                >\n                  <OrganizationIcon />\n                </div>\n              </>\n            )}\n\n            {mapMeta.mapType === MAP_TYPES.STATE && (\n              <div\n                className=\"back fadeInUp\"\n                onClick={() => {\n                  history.push('/#MapExplorer');\n                }}\n                style={trail[4]}\n              >\n                <ArrowLeftIcon />\n              </div>\n            )}\n          </div>\n\n          {(expandTable || width < 769) && (\n            <div className=\"switch-statistic fadeInUp\" style={trail[5]}>\n              {PRIMARY_STATISTICS.map((statistic) => (\n                <div\n                  key={statistic}\n                  className={classnames('statistic-option', `is-${statistic}`, {\n                    'is-highlighted': mapStatistic === statistic,\n                  })}\n                  onClick={setMapStatistic.bind(this, statistic)}\n                >\n                  <DotFillIcon />\n                </div>\n              ))}\n            </div>\n          )}\n        </div>\n      </div>\n\n      <div\n        ref={mapExplorerRef}\n        className=\"fadeInUp\"\n        style={trail[3]}\n        {...swipeHandlers}\n      >\n        {mapStatistic && (\n          <Suspense\n            fallback={\n              <MapVisualizerLoader\n                className=\"map-loader\"\n                {...{\n                  width: mapExplorerRef.current?.clientWidth,\n                  statistic: mapStatistic,\n                }}\n              />\n            }\n          >\n            <MapVisualizer\n              {...{mapCode, mapView, mapViz}}\n              data={mapData}\n              {...{regionHighlighted, setRegionHighlighted}}\n              statistic={mapStatistic}\n            ></MapVisualizer>\n          </Suspense>\n        )}\n      </div>\n    </div>\n  );\n}\n\nconst isEqual = (prevProps, currProps) => {\n  if (!equal(prevProps.stateCode, currProps.stateCode)) {\n    return false;\n  } else if (!equal(prevProps.regionHighlighted, currProps.regionHighlighted)) {\n    return false;\n  } else if (!equal(prevProps.mapStatistic, currProps.mapStatistic)) {\n    return false;\n  } else if (!equal(prevProps.anchor, currProps.anchor)) {\n    return false;\n  } else if (!equal(prevProps.expandTable, currProps.expandTable)) {\n    return false;\n  } else if (\n    !equal(\n      prevProps.data?.TT?.meta?.['last_updated'],\n      currProps.data?.TT?.meta?.['last_updated']\n    )\n  ) {\n    return false;\n  } else if (!equal(prevProps.data?.TT?.total, currProps.data?.TT?.total)) {\n    return false;\n  }\n  return true;\n};\n\nexport default memo(MapExplorer, isEqual);\n","/Users/bonnie/Workstation/corona-tracker/src/main/app/src/components/Footer.js",[],"/Users/bonnie/Workstation/corona-tracker/src/main/app/src/components/Search.js",[],"/Users/bonnie/Workstation/corona-tracker/src/main/app/src/components/Level.js",[],"/Users/bonnie/Workstation/corona-tracker/src/main/app/src/components/MapSwitcher.js",[],"/Users/bonnie/Workstation/corona-tracker/src/main/app/src/components/StateHeader.js",[],"/Users/bonnie/Workstation/corona-tracker/src/main/app/src/components/Table.js",[],"/Users/bonnie/Workstation/corona-tracker/src/main/app/src/components/TimeseriesExplorer.js",[],"/Users/bonnie/Workstation/corona-tracker/src/main/app/src/components/Minigraphs.js",[],"/Users/bonnie/Workstation/corona-tracker/src/main/app/src/components/DeltaBarGraph.js",[],"/Users/bonnie/Workstation/corona-tracker/src/main/app/src/components/StateMeta.js",[],"/Users/bonnie/Workstation/corona-tracker/src/main/app/src/utils/Helpers.js",[],"/Users/bonnie/Workstation/corona-tracker/src/main/app/src/utils/Colors.js",[],"/Users/bonnie/Workstation/corona-tracker/src/main/app/src/hooks/useIsVisible.js",[],"/Users/bonnie/Workstation/corona-tracker/src/main/app/src/hooks/useStickySWR.js",[],"/Users/bonnie/Workstation/corona-tracker/src/main/app/src/common/ServerError.js",[],"/Users/bonnie/Workstation/corona-tracker/src/main/app/src/common/NotFound.js",[],"/Users/bonnie/Workstation/corona-tracker/src/main/app/src/common/LoadingIndicator.js",[],"/Users/bonnie/Workstation/corona-tracker/src/main/app/src/components/Updates.js",[],"/Users/bonnie/Workstation/corona-tracker/src/main/app/src/components/StateDropdown.js",[],"/Users/bonnie/Workstation/corona-tracker/src/main/app/src/components/MapVisualizer.js",[],"/Users/bonnie/Workstation/corona-tracker/src/main/app/src/components/Row.js",[],"/Users/bonnie/Workstation/corona-tracker/src/main/app/src/components/TimeseriesBrush.js",[],"/Users/bonnie/Workstation/corona-tracker/src/main/app/src/components/Timeseries.js",[],"/Users/bonnie/Workstation/corona-tracker/src/main/app/src/components/StateMetaCard.js",[],"/Users/bonnie/Workstation/corona-tracker/src/main/app/src/components/Tooltip.js",[],"/Users/bonnie/Workstation/corona-tracker/src/main/app/src/animations.js",[],"/Users/bonnie/Workstation/corona-tracker/src/main/app/src/hooks/useResizeObserver.js",[],"/Users/bonnie/Workstation/corona-tracker/src/main/app/src/components/HeaderCell.js",[],"/Users/bonnie/Workstation/corona-tracker/src/main/app/src/components/DistrictRow.js",[],"/Users/bonnie/Workstation/corona-tracker/src/main/app/src/components/Cell.js",[],"/Users/bonnie/Workstation/corona-tracker/src/main/app/src/components/MapLegend.js",[],"/Users/bonnie/Workstation/corona-tracker/src/main/app/src/components/ActionsPanel.js",[],"/Users/bonnie/Workstation/corona-tracker/src/main/app/src/components/loaders/MapVisualizer.js",[],"/Users/bonnie/Workstation/corona-tracker/src/main/app/src/components/loaders/Table.js",[],"/Users/bonnie/Workstation/corona-tracker/src/main/app/src/components/loaders/Timeseries.js",[],"/Users/bonnie/Workstation/corona-tracker/src/main/app/src/components/snippets/TableDeltaHelper.js",[],"/Users/bonnie/Workstation/corona-tracker/src/main/app/src/components/Timeline.js",[],"/Users/bonnie/Workstation/corona-tracker/src/main/app/src/workers/getDistricts.js",[],"/Users/bonnie/Workstation/corona-tracker/src/main/app/src/components/Blog.js",[],"/Users/bonnie/Workstation/corona-tracker/src/main/app/src/components/Navbar.js",[],"/Users/bonnie/Workstation/corona-tracker/src/main/app/src/components/About.js",[],"/Users/bonnie/Workstation/corona-tracker/src/main/app/src/components/LanguageSwitcher.js",[],{"ruleId":"257","replacedBy":"258"},{"ruleId":"259","replacedBy":"260"},{"ruleId":"261","severity":1,"message":"262","line":3,"column":15,"nodeType":"263","messageId":"264","endLine":3,"endColumn":23},{"ruleId":"261","severity":1,"message":"265","line":3,"column":35,"nodeType":"263","messageId":"264","endLine":3,"endColumn":44},{"ruleId":"261","severity":1,"message":"266","line":4,"column":16,"nodeType":"263","messageId":"264","endLine":4,"endColumn":24},{"ruleId":"261","severity":1,"message":"267","line":4,"column":34,"nodeType":"263","messageId":"264","endLine":4,"endColumn":45},{"ruleId":"261","severity":1,"message":"268","line":5,"column":8,"nodeType":"263","messageId":"264","endLine":5,"endColumn":19},{"ruleId":"261","severity":1,"message":"269","line":16,"column":9,"nodeType":"263","messageId":"264","endLine":16,"endColumn":16},{"ruleId":"261","severity":1,"message":"270","line":2,"column":8,"nodeType":"263","messageId":"264","endLine":2,"endColumn":20},{"ruleId":"261","severity":1,"message":"271","line":3,"column":9,"nodeType":"263","messageId":"264","endLine":3,"endColumn":16},{"ruleId":"261","severity":1,"message":"272","line":1,"column":24,"nodeType":"263","messageId":"264","endLine":1,"endColumn":38},{"ruleId":"261","severity":1,"message":"273","line":2,"column":26,"nodeType":"263","messageId":"264","endLine":2,"endColumn":30},{"ruleId":"261","severity":1,"message":"271","line":4,"column":9,"nodeType":"263","messageId":"264","endLine":4,"endColumn":16},{"ruleId":"261","severity":1,"message":"274","line":21,"column":8,"nodeType":"263","messageId":"264","endLine":21,"endColumn":14},{"ruleId":"275","severity":1,"message":"276","line":60,"column":18,"nodeType":"263","messageId":"277","endLine":60,"endColumn":22},{"ruleId":"261","severity":1,"message":"278","line":11,"column":7,"nodeType":"263","messageId":"264","endLine":11,"endColumn":14},{"ruleId":"261","severity":1,"message":"279","line":73,"column":15,"nodeType":"263","messageId":"264","endLine":73,"endColumn":26},{"ruleId":"261","severity":1,"message":"271","line":2,"column":9,"nodeType":"263","messageId":"264","endLine":2,"endColumn":16},{"ruleId":"280","severity":1,"message":"281","line":85,"column":7,"nodeType":"282","messageId":"283","endLine":92,"endColumn":8},"no-native-reassign",["284"],"no-negated-in-lhs",["285"],"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'useEffect' is defined but never used.","'Redirect' is defined but never used.","'useLocation' is defined but never used.","'useDarkMode' is defined but never used.","'Content' is assigned a value but never used.","'useStickySWR' is defined but never used.","'fetcher' is defined but never used.","'POLL_LIST_SIZE' is defined but never used.","'data' is defined but never used.","'useSWR' is defined but never used.","no-use-before-define","'data' was used before it was defined.","usedBeforeDefined","'TabPane' is assigned a value but never used.","'tabBarStyle' is assigned a value but never used.","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","no-global-assign","no-unsafe-negation"]